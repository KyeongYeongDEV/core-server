version: '3.8'
services:
  node:
    build:
      context: ./nodejs
      dockerfile: Dockerfile
    container_name: node-app
    ports:
      - "8080:8080"
    networks:
      - backend-network
    environment:
      - PORT=${NODE_PORT}
      - DB_DATABASE=${DB_DATABASE}
      - DB_HOST=${DB_HOST}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_PORT=${DB_PORT}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - OPENAI_API_KEY=${OPENAI_API_KEY}

  chat :
    build:
      context: ./chat
      dockerfile: Dockerfile
    container_name: node-chat
    ports:
      - "9000:9000"
    networks:
      - backend-network
    environment:
      - PORT=${CHAT_PORT}
      
      - DB_DATABASE=${DB_DATABASE}
      - DB_HOST=${DB_HOST}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_PORT=${DB_PORT}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - OPENAI_API_KEY=${OPENAI_API_KEY}

  spring:
    container_name: spring
    build:
      context: ./spring
      dockerfile: Dockerfile
    ports:
      - "9999:6000"
    networks:
      - backend-network

  nginx:
    container_name: nginx
    image: nginx:latest
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    networks:
      - backend-network
    ports:
      - "80:80"
    depends_on:
      - node


  redis:
    container_name: redis
    image: redis
    ports:
      - "6379:6379"
    networks:
      - backend-network

networks:
  backend-network:
    driver: bridge